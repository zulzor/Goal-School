const fs = require('fs');
const path = require('path');

console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø –ü–†–û–ï–ö–¢–ê');
console.log('========================================');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
const requiredFiles = ['package.json', 'App.tsx', 'index.ts', 'tsconfig.json'];

const requiredDirs = ['src', 'web-export', 'android'];

let allGood = true;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
requiredFiles.forEach(file => {
  if (fs.existsSync(path.join(__dirname, file))) {
    console.log(`‚úÖ ${file} - –ù–ê–ô–î–ï–ù`);
  } else {
    console.log(`‚ùå ${file} - –û–¢–°–£–¢–°–¢–í–£–ï–¢`);
    allGood = false;
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–æ–∫
requiredDirs.forEach(dir => {
  if (fs.existsSync(path.join(__dirname, dir))) {
    console.log(`‚úÖ –ü–∞–ø–∫–∞ ${dir} - –ù–ê–ô–î–ï–ù–ê`);
  } else {
    console.log(`‚ùå –ü–∞–ø–∫–∞ ${dir} - –û–¢–°–£–¢–°–¢–í–£–ï–¢`);
    allGood = false;
  }
});

console.log('\n========================================');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–µ–±-—Å–±–æ—Ä–∫–∏
const webExportPath = path.join(__dirname, 'web-export');
if (fs.existsSync(webExportPath)) {
  const files = fs.readdirSync(webExportPath);
  if (files.length > 0) {
    console.log('‚úÖ –í–µ–±-—Å–±–æ—Ä–∫–∞ - –ù–ê–ô–î–ï–ù–ê');
  } else {
    console.log('‚ö†Ô∏è  –í–µ–±-—Å–±–æ—Ä–∫–∞ - –ü–£–°–¢–ê–Ø');
  }
} else {
  console.log('‚ùå –í–µ–±-—Å–±–æ—Ä–∫–∞ - –û–¢–°–£–¢–°–¢–í–£–ï–¢');
}

console.log('\n========================================');
console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã:');
console.log('  npm run start              # –ó–∞–ø—É—Å–∫ Expo DevTools');
console.log('  npm run web                # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–≤–µ—Ä—Å–∏–∏');
console.log('  npm run android            # –ó–∞–ø—É—Å–∫ –Ω–∞ Android');
console.log('  npm run ios                # –ó–∞–ø—É—Å–∫ –Ω–∞ iOS (—Ç—Ä–µ–±—É–µ—Ç—Å—è macOS)');
console.log('  npm run launch-web         # –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –≤–µ–±-–≤–µ—Ä—Å–∏–∏');
console.log('  npm run build-web          # –°–±–æ—Ä–∫–∞ –≤–µ–±-–≤–µ—Ä—Å–∏–∏');
console.log('  npm run build-apk          # –°–æ–∑–¥–∞–Ω–∏–µ APK –¥–ª—è Android');
console.log('  npm run check              # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞');

console.log('\n========================================');

if (allGood) {
  console.log('üéâ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –º–µ—Å—Ç–µ!');
  console.log('\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–≤–µ—Ä—Å–∏–∏: npm run launch-web');
  console.log('2. –î–ª—è —Å–±–æ—Ä–∫–∏ APK: npm run build-apk');
} else {
  console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!');
  console.log('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫.');
}

console.log('\n========================================');
