#!/usr/bin/env node

const { exec } = require('child_process');

console.log('üîÑ –ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê –§–£–¢–ë–û–õ–¨–ù–û–ô –®–ö–û–õ–´ "–ê–†–°–ï–ù–ê–õ"');
console.log('='.repeat(50));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
function stopServer() {
    return new Promise((resolve) => {
        console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...');
        exec('taskkill /IM node.exe /F', (error, stdout, stderr) => {
            if (error) {
                console.log('‚ÑπÔ∏è  –°–µ—Ä–≤–µ—Ä, –≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            } else {
                console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            }
            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
            setTimeout(resolve, 2000);
        });
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
function startServer() {
    return new Promise((resolve) => {
        console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...');
        const serverProcess = exec('node main-server.js');
        
        serverProcess.stdout.on('data', (data) => {
            process.stdout.write(data);
            // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω, –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            if (data.includes('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É')) {
                console.log('\n‚úÖ –°–ï–†–í–ï–† –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù!');
                console.log('\nüåê –î–û–°–¢–£–ü –ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Æ:');
                console.log('   URL: http://localhost:3003');
                console.log('\nüí° –°–û–í–ï–¢–´ –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:');
                console.log('   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É');
                console.log('   ‚Ä¢ –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ, –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞"');
                console.log('   ‚Ä¢ –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –æ—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞');
                resolve();
            }
        });
        
        serverProcess.stderr.on('data', (data) => {
            process.stderr.write(data);
        });
        
        serverProcess.on('error', (error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
        });
    });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
async function restartServer() {
    try {
        await stopServer();
        await startServer();
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    }
}

// –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restartServer();