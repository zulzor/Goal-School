const { exec } = require('child_process');
const path = require('path');
const fs = require('fs');

console.log('üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –°–ë–û–†–ö–£ –ü–û–õ–ù–û–§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–ô –í–ï–ë-–í–ï–†–°–ò–ò');
console.log('='.repeat(55));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —Å —Ç–∞–π–º–∞—É—Ç–æ–º
function runCommandWithTimeout(command, timeout = 300000) {
  // 5 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç
  return new Promise((resolve, reject) => {
    console.log(`\nüîß –í—ã–ø–æ–ª–Ω—è–µ–º: ${command}`);

    const child = exec(command, { cwd: __dirname }, (error, stdout, stderr) => {
      if (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        reject(error);
        return;
      }

      if (stderr && !stderr.includes('warning')) {
        console.warn(`‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${stderr}`);
      }

      console.log(`‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`);
      resolve(stdout);
    });

    // –í—ã–≤–æ–¥–∏–º –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    child.stdout.on('data', data => {
      process.stdout.write(data);
    });

    child.stderr.on('data', data => {
      process.stderr.write(data);
    });

    // –¢–∞–π–º–∞—É—Ç
    setTimeout(() => {
      child.kill();
      reject(new Error(`–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (${timeout}ms)`));
    }, timeout);
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏
async function buildFullWebApp() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Expo CLI...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Expo CLI
    try {
      await runCommandWithTimeout('npx expo --version', 30000);
      console.log('‚úÖ Expo CLI –¥–æ—Å—Ç—É–ø–µ–Ω');
    } catch (error) {
      console.log('‚ö†Ô∏è  Expo CLI –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...');
      await runCommandWithTimeout('npm install -g @expo/cli', 120000);
    }

    console.log('\nüóëÔ∏è  –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å–±–æ—Ä–∫—É...');
    const webExportPath = path.join(__dirname, 'web-export');
    if (fs.existsSync(webExportPath)) {
      fs.rmSync(webExportPath, { recursive: true, force: true });
      console.log('‚úÖ –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–±–æ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∞');
    }

    console.log('\nüèóÔ∏è  –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–±–æ—Ä–∫—É –≤–µ–±-–≤–µ—Ä—Å–∏–∏...');
    console.log('–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...');

    // –í—ã–ø–æ–ª–Ω—è–µ–º —Å–±–æ—Ä–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    await runCommandWithTimeout('npx expo export:web --dev', 600000); // 10 –º–∏–Ω—É—Ç

    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–±–æ—Ä–∫–∏...');
    if (fs.existsSync(webExportPath)) {
      const files = fs.readdirSync(webExportPath);
      console.log(`‚úÖ –°–±–æ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –§–∞–π–ª—ã –≤ web-export: ${files.length}`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
      const keyFiles = ['index.html', 'app.js'];
      keyFiles.forEach(file => {
        const filePath = path.join(webExportPath, file);
        if (fs.existsSync(filePath)) {
          const stats = fs.statSync(filePath);
          console.log(`‚úÖ ${file} (${(stats.size / 1024).toFixed(2)} KB)`);
        } else {
          console.warn(`‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: ${file}`);
        }
      });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É assets
      const assetsPath = path.join(webExportPath, 'assets');
      if (fs.existsSync(assetsPath)) {
        const assetFiles = fs.readdirSync(assetsPath);
        console.log(`‚úÖ –ü–∞–ø–∫–∞ assets —Å–æ–¥–µ—Ä–∂–∏—Ç ${assetFiles.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
      } else {
        console.warn('‚ö†Ô∏è  –ü–∞–ø–∫–∞ assets –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      }
    } else {
      throw new Error('–ü–∞–ø–∫–∞ web-export –Ω–µ —Å–æ–∑–¥–∞–Ω–∞');
    }

    console.log('\nüéâ –ü–û–õ–ù–û–§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–ê–Ø –í–ï–ë-–í–ï–†–°–ò–Ø –°–û–ë–†–ê–ù–ê –£–°–ü–ï–®–ù–û!');
    console.log('='.repeat(55));
    console.log('–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:');
    console.log('npm run serve-web');
    console.log('='.repeat(55));
  } catch (error) {
    console.error('\nüí• –û–®–ò–ë–ö–ê –ü–†–ò –°–ë–û–†–ö–ï:');
    console.error(error.message);

    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
    console.log('\nüîß –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û–ï –†–ï–®–ï–ù–ò–ï:');
    console.log('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ:');
    console.log('1. npx expo export:web');
    console.log('2. –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–∏—Å–∞–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');
    console.log('3. npm run serve-web');

    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
buildFullWebApp();
