const { spawn } = require('child_process');
const path = require('path');
const fs = require('fs');

console.log('üöÄ –°–ë–û–†–ö–ê –í–ï–ë-–í–ï–†–°–ò–ò –° –ü–û–ú–û–©–¨–Æ WEBPACK');
console.log('='.repeat(45));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
function runCommand(command, args, options = {}) {
  return new Promise((resolve, reject) => {
    console.log(`\nüîß –í—ã–ø–æ–ª–Ω—è–µ–º: ${command} ${args.join(' ')}`);

    const child = spawn(command, args, {
      stdio: 'inherit',
      shell: true,
      cwd: __dirname,
      ...options,
    });

    child.on('close', code => {
      if (code === 0) {
        resolve();
      } else {
        reject(new Error(`–ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –∫–æ–¥–æ–º ${code}`));
      }
    });

    child.on('error', error => {
      reject(error);
    });
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏
async function buildWithWebpack() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ webpack...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ webpack
    try {
      await runCommand('npx', ['webpack', '--version'], { stdio: 'pipe' });
      console.log('‚úÖ Webpack –Ω–∞–π–¥–µ–Ω');
    } catch (error) {
      console.log('‚ö†Ô∏è  Webpack –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...');
      await runCommand('npm', ['install', '--save-dev', 'webpack', 'webpack-cli']);
    }

    console.log('\nüóëÔ∏è  –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å–±–æ—Ä–∫—É...');
    const webExportPath = path.join(__dirname, 'web-export');
    if (fs.existsSync(webExportPath)) {
      fs.rmSync(webExportPath, { recursive: true, force: true });
      console.log('‚úÖ –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å–±–æ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∞');
    }

    console.log('\nüèóÔ∏è  –°–æ–∑–¥–∞–µ–º —Å–±–æ—Ä–∫—É —Å –ø–æ–º–æ—â—å—é Webpack...');
    await runCommand('npx', ['webpack', '--config', 'webpack.config.js', '--mode', 'production']);

    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–±–æ—Ä–∫–∏...');
    if (fs.existsSync(webExportPath)) {
      const files = fs.readdirSync(webExportPath);
      console.log(`‚úÖ –°–±–æ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –§–∞–π–ª—ã –≤ web-export: ${files.length}`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
      const keyFiles = ['index.html'];
      keyFiles.forEach(file => {
        const filePath = path.join(webExportPath, file);
        if (fs.existsSync(filePath)) {
          const stats = fs.statSync(filePath);
          console.log(`‚úÖ ${file} (${(stats.size / 1024).toFixed(2)} KB)`);
        } else {
          console.warn(`‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: ${file}`);
        }
      });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ JS —Ñ–∞–π–ª–æ–≤
      const jsFiles = files.filter(file => file.endsWith('.js'));
      if (jsFiles.length > 0) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${jsFiles.length} JS —Ñ–∞–π–ª–æ–≤`);
      } else {
        console.warn('‚ö†Ô∏è  JS —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      }
    } else {
      throw new Error('–ü–∞–ø–∫–∞ web-export –Ω–µ —Å–æ–∑–¥–∞–Ω–∞');
    }

    console.log('\nüéâ –í–ï–ë-–í–ï–†–°–ò–Ø –°–û–ë–†–ê–ù–ê –£–°–ü–ï–®–ù–û –° –ü–û–ú–û–©–¨–Æ WEBPACK!');
    console.log('='.repeat(45));
    console.log('–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:');
    console.log('npm run serve-web');
    console.log('='.repeat(45));
  } catch (error) {
    console.error('\nüí• –û–®–ò–ë–ö–ê –ü–†–ò –°–ë–û–†–ö–ï:');
    console.error(error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
buildWithWebpack();
