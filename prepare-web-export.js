const fs = require('fs');
const path = require('path');

console.log('üöÄ –ü–û–î–ì–û–¢–û–í–ö–ê –í–ï–ë-–≠–ö–°–ü–û–†–¢–ê');
console.log('='.repeat(30));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
function copyRecursiveSync(src, dest) {
  const exists = fs.existsSync(src);
  const stats = exists && fs.statSync(src);
  const isDirectory = exists && stats.isDirectory();

  if (isDirectory) {
    fs.mkdirSync(dest, { recursive: true });
    fs.readdirSync(src).forEach(function (childItemName) {
      copyRecursiveSync(path.join(src, childItemName), path.join(dest, childItemName));
    });
  } else {
    fs.copyFileSync(src, dest);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏
function ensureDir(dirPath) {
  if (!fs.existsSync(dirPath)) {
    fs.mkdirSync(dirPath, { recursive: true });
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: ${dirPath}`);
  }
}

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ web-export
  const webExportPath = path.join(__dirname, 'web-export');
  ensureDir(webExportPath);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –Ω–µ–π —Ñ–∞–π–ª—ã
  const files = fs.readdirSync(webExportPath);
  if (files.length > 0) {
    console.log(`‚úÖ –í –ø–∞–ø–∫–µ web-export –Ω–∞–π–¥–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    const keyFiles = ['index.html', 'app.js'];
    keyFiles.forEach(file => {
      const filePath = path.join(webExportPath, file);
      if (fs.existsSync(filePath)) {
        const stats = fs.statSync(filePath);
        console.log(`‚úÖ ${file} (${(stats.size / 1024).toFixed(2)} KB)`);
      } else {
        console.warn(`‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: ${file}`);
      }
    });
  } else {
    console.log('‚ö†Ô∏è  –ü–∞–ø–∫–∞ web-export –ø—É—Å—Ç–∞');

    // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π index.html
    const indexPath = path.join(webExportPath, 'index.html');
    const indexContent = `<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–§—É—Ç–±–æ–ª—å–Ω–∞—è —à–∫–æ–ª–∞ "–ê—Ä—Å–µ–Ω–∞–ª"</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            text-align: center; 
            padding: 50px; 
            background-color: #f5f5f5;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 { color: #023474; }
        p { color: #666; line-height: 1.6; }
        .note { 
            background: #fff8e1; 
            padding: 15px; 
            border-radius: 4px; 
            margin: 20px 0;
            border-left: 4px solid #ffc107;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>‚öΩ –§—É—Ç–±–æ–ª—å–Ω–∞—è —à–∫–æ–ª–∞ "–ê—Ä—Å–µ–Ω–∞–ª"</h1>
        <p>–í–µ–±-–≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ—É—Ç–±–æ–ª—å–Ω–æ–π —à–∫–æ–ª–æ–π</p>
        
        <div class="note">
            <p><strong>–í–∞–∂–Ω–æ:</strong> –î–ª—è –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–±–æ—Ä–∫—É –≤–µ–±-–≤–µ—Ä—Å–∏–∏.</p>
        </div>
        
        <h2>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–ø—É—Å–∫—É:</h2>
        <ol style="text-align: left; max-width: 400px; margin: 0 auto;">
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞</li>
            <li>–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: <code>npm run build-full-web-app</code></li>
            <li>–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: <code>npm run serve-web</code></li>
        </ol>
        
        <p style="margin-top: 30px;">
            <a href="https://github.com" style="color: #023474; text-decoration: none; font-weight: bold;">
                –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
            </a>
        </p>
    </div>
</body>
</html>`;

    fs.writeFileSync(indexPath, indexContent, 'utf8');
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π index.html');
  }

  console.log('\nüéâ –ü–û–î–ì–û–¢–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!');
  console.log('='.repeat(30));
  console.log('–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:');
  console.log('npm run serve-web');
  console.log('='.repeat(30));
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –≤–µ–±-—ç–∫—Å–ø–æ—Ä—Ç–∞:', error.message);
  process.exit(1);
}
