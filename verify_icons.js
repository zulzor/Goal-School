#!/usr/bin/env node

const http = require('http');

console.log('üîç –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –ò–ö–û–ù–û–ö –§–£–¢–ë–û–õ–¨–ù–û–ô –®–ö–û–õ–´ "–ê–†–°–ï–ù–ê–õ"');
console.log('='.repeat(60));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL
async function checkUrl(url) {
  return new Promise((resolve) => {
    const req = http.get(url, (res) => {
      resolve({
        statusCode: res.statusCode,
        statusMessage: res.statusMessage,
        url: url
      });
    }).on('error', (err) => {
      resolve({
        statusCode: 0,
        statusMessage: err.message,
        url: url
      });
    });
    
    // –¢–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥
    req.setTimeout(5000, () => {
      req.destroy();
      resolve({
        statusCode: 0,
        statusMessage: 'Timeout',
        url: url
      });
    });
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
async function verifyIcons() {
  console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –ò–ö–û–ù–û–ö...\n');
  
  const iconUrls = [
    'http://localhost:3003/icon.png',
    'http://localhost:3003/favicon.png',
    'http://localhost:3003/adaptive-icon.png',
    'http://localhost:3003/splash-icon.png'
  ];
  
  const results = [];
  
  for (const url of iconUrls) {
    const result = await checkUrl(url);
    results.push(result);
    
    const status = result.statusCode === 200 ? '‚úÖ' : '‚ùå';
    console.log(`${status} ${result.url} - ${result.statusCode} ${result.statusMessage}`);
  }
  
  console.log('\nüìä –°–í–û–î–ö–ê –ü–†–û–í–ï–†–ö–ò:');
  console.log('='.repeat(50));
  
  const successful = results.filter(r => r.statusCode === 200).length;
  const failed = results.length - successful;
  
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successful}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${failed}`);
  console.log(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${Math.round((successful / results.length) * 100)}%`);
  
  if (failed > 0) {
    console.log('\n‚ùå –û–®–ò–ë–ö–ò:');
    results.filter(r => r.statusCode !== 200).forEach(r => {
      console.log(`  - ${r.url}: ${r.statusMessage}`);
    });
  } else {
    console.log('\nüéâ –í–°–ï –ò–ö–û–ù–ö–ò –î–û–°–¢–£–ü–ù–´!');
  }
  
  console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
  console.log('='.repeat(20));
  console.log('1. –ï—Å–ª–∏ –≤—ã –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –≤–∏–¥–∏—Ç–µ –æ—à–∏–±–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ, –æ—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à');
  console.log('2. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–æ–º–æ—â—å—é Ctrl+F5');
  console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∫–ª–∞–¥–∫—É "Application" –≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞');
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
verifyIcons().catch(console.error);