import React, { useState } from 'react';
import { View, Text, StyleSheet, ScrollView } from 'react-native';
import { Card, Title, Paragraph, Button } from 'react-native-paper';
import { useAuth, UserRole } from '../context/LocalStorageAuthContext';
import { AnimatedCard } from '../components/AnimatedCard';
import { AnimatedList } from '../components/AnimatedList';
import { AnimatedButton } from '../components/AnimatedButton';
import { AnimatedProgressChart } from '../components/AnimatedProgressChart';
import { AnimatedGoalList } from '../components/AnimatedGoalList';
import { GradientCard } from '../components/GradientCard';
import { ArsenalBanner } from '../components/ArsenalBanner';
import { AnimatedProgressBar } from '../components/AnimatedProgressBar';
import { BeautifulTabBar } from '../components/BeautifulTabBar';
import { EnhancedAnimatedCard } from '../components/EnhancedAnimatedCard';
import { EnhancedAnimatedList } from '../components/EnhancedAnimatedList';
import { EnhancedBanner } from '../components/EnhancedBanner';
import { UnderDevelopmentBanner } from '../components/UnderDevelopmentBanner';
import { COLORS } from '../constants'; // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç —Ü–≤–µ—Ç–æ–≤

export default function AnimationsDemoScreen() {
  const { user } = useAuth();
  const [activeTab, setActiveTab] = useState('demo');

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
  if (user?.role === UserRole.MANAGER) {
    return (
      <UnderDevelopmentBanner
        title="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π"
        description="–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏."
      />
    );
  }

  const tabs = [
    { key: 'demo', title: '–î–µ–º–æ', icon: 'üåü' },
    { key: 'cards', title: '–ö–∞—Ä—Ç–æ—á–∫–∏', icon: 'üÉè' },
    { key: 'lists', title: '–°–ø–∏—Å–∫–∏', icon: 'üìã' },
  ];

  const sampleGoals = [
    {
      id: '1',
      title: '–£–ª—É—á—à–∏—Ç—å —Ç–µ—Ö–Ω–∏–∫—É –≤–µ–¥–µ–Ω–∏—è –º—è—á–∞',
      description: '–ü—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –≤–µ–¥–µ–Ω–∏–µ –º—è—á–∞ 30 –º–∏–Ω—É—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
      progress: 65,
      target: 100,
      deadline: '2023-12-31',
      category: '–¢–µ—Ö–Ω–∏–∫–∞',
      status: 'active' as const,
    },
    {
      id: '2',
      title: '–£–≤–µ–ª–∏—á–∏—Ç—å –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å',
      description: '–ë–µ–≥–∞—Ç—å 5 –∫–º –∑–∞ 25 –º–∏–Ω—É—Ç',
      progress: 30,
      target: 100,
      deadline: '2024-01-15',
      category: '–§–∏–∑–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞',
      status: 'active' as const,
    },
    {
      id: '3',
      title: '–û—Å–≤–æ–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã',
      description: '–û—Ç—Ä–∞–±–æ—Ç–∞—Ç—å 10 —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤',
      progress: 80,
      target: 100,
      deadline: '2023-11-30',
      category: '–¢–∞–∫—Ç–∏–∫–∞',
      status: 'active' as const,
    },
  ];

  const sampleData = [
    { value: 20, label: '–ü–Ω', date: '2023-01-01' },
    { value: 45, label: '–í—Ç', date: '2023-01-02' },
    { value: 30, label: '–°—Ä', date: '2023-01-03' },
    { value: 60, label: '–ß—Ç', date: '2023-01-04' },
    { value: 40, label: '–ü—Ç', date: '2023-01-05' },
    { value: 75, label: '–°–±', date: '2023-01-06' },
    { value: 50, label: '–í—Å', date: '2023-01-07' },
  ];

  return (
    <ScrollView style={styles.container}>
      <ArsenalBanner
        title="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π"
        subtitle="–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏"
      />

      <BeautifulTabBar tabs={tabs} activeTab={activeTab} onTabPress={setActiveTab} />

      {activeTab === 'demo' && (
        <View style={styles.tabContent}>
          <EnhancedAnimatedCard>
            <Card>
              <Card.Content>
                <Title>–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞</Title>
                <Paragraph>–° —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ –∞–Ω–∏–º–∞—Ü–∏–∏</Paragraph>
                <Paragraph>
                  –≠—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∞–Ω–∏–º–∞—Ü–∏–∏, –≤–∫–ª—é—á–∞—è 3D-—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
                  –∏ —Å–ª–æ–∂–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã.
                </Paragraph>
                <AnimatedButton
                  title="–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞"
                  onPress={() => console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞')}
                  style={styles.button}
                />
              </Card.Content>
            </Card>
          </EnhancedAnimatedCard>

          <EnhancedBanner
            title="–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –±–∞–Ω–Ω–µ—Ä"
            subtitle="–° —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é"
          />

          <EnhancedAnimatedList
            data={sampleGoals}
            renderItem={({ item, index }) => (
              <Card style={styles.goalCard}>
                <Card.Content>
                  <Title>{item.title}</Title>
                  <Paragraph>{item.description}</Paragraph>
                  <AnimatedProgressBar
                    progress={item.progress}
                    title="–ü—Ä–æ–≥—Ä–µ—Å—Å"
                    color={COLORS.primary} // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–≤–µ—Ç Arsenal –≤–º–µ—Å—Ç–æ —Ö–∞—Ä–¥–∫–æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
                  />
                </Card.Content>
              </Card>
            )}
            keyExtractor={item => item.id}
          />
        </View>
      )}

      {activeTab === 'cards' && (
        <View style={styles.tabContent}>
          <AnimatedCard animationType="fade" delay={0}>
            <Card>
              <Card.Content>
                <Title>–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞</Title>
                <Paragraph>–≠—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º fade.</Paragraph>
              </Card.Content>
            </Card>
          </AnimatedCard>

          <AnimatedCard animationType="slide" delay={200}>
            <Card>
              <Card.Content>
                <Title>–°–ª–∞–π–¥-–∫–∞—Ä—Ç–æ—á–∫–∞</Title>
                <Paragraph>–≠—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º slide.</Paragraph>
              </Card.Content>
            </Card>
          </AnimatedCard>

          <AnimatedCard animationType="scale" delay={400}>
            <Card>
              <Card.Content>
                <Title>–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞</Title>
                <Paragraph>–≠—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è.</Paragraph>
              </Card.Content>
            </Card>
          </AnimatedCard>

          <GradientCard title="–ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞" subtitle="–° –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º" />
        </View>
      )}

      {activeTab === 'lists' && (
        <View style={styles.tabContent}>
          <AnimatedList
            data={sampleData}
            renderItem={({ item }) => (
              <Card style={styles.listItem}>
                <Card.Content>
                  <Title>{item.label}</Title>
                  <AnimatedProgressBar
                    progress={item.value}
                    title="–ó–Ω–∞—á–µ–Ω–∏–µ"
                    color={COLORS.accent} // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–≤–µ—Ç Arsenal –≤–º–µ—Å—Ç–æ —Ö–∞—Ä–¥–∫–æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
                  />
                </Card.Content>
              </Card>
            )}
            keyExtractor={item => item.label}
          />

          <AnimatedGoalList goals={sampleGoals} title="–°–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π" />

          <AnimatedProgressChart
            data={sampleData}
            title="–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"
            color={COLORS.warning} // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–≤–µ—Ç Arsenal –≤–º–µ—Å—Ç–æ —Ö–∞—Ä–¥–∫–æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
          />
        </View>
      )}
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: COLORS.background, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–≤–µ—Ç Arsenal –≤–º–µ—Å—Ç–æ —Ö–∞—Ä–¥–∫–æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
  },
  tabContent: {
    padding: 16,
  },
  button: {
    marginTop: 16,
  },
  goalCard: {
    marginBottom: 16,
  },
  listItem: {
    marginBottom: 16,
  },
});
