import React from 'react';
import { View, StyleSheet, ScrollView, Alert } from 'react-native';
import { Card, Title, Paragraph, Button, Text } from 'react-native-paper';
import { useAuth, UserRole } from '../context/LocalStorageAuthContext';
import { COLORS } from '../constants';
import { AnimatedCard } from '../components/AnimatedCard';
import { GradientCard } from '../components/GradientCard';
import { StatCard } from '../components/StatCard';
import { ArsenalButton } from '../components/ArsenalButton';
import { AnimatedButton } from '../components/AnimatedButton';
import { UnderDevelopmentBanner } from '../components/UnderDevelopmentBanner';

export const ComponentTestScreen: React.FC = () => {
  const { user } = useAuth();

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
  if (user?.role === UserRole.MANAGER) {
    return (
      <UnderDevelopmentBanner
        title="–¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
        description="–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏."
      />
    );
  }

  const testComponents = [
    { name: 'AnimatedCard', description: '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è' },
    { name: 'GradientCard', description: '–ö–∞—Ä—Ç–æ—á–∫–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º' },
    { name: 'StatCard', description: '–ö–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏' },
    { name: 'ArsenalButton', description: '–°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ Arsenal' },
    { name: 'AnimatedButton', description: '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏' },
  ];

  const handleTestComponent = (componentName: string) => {
    Alert.alert(`–¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞`, `–í—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ${componentName}`);
  };

  return (
    <ScrollView style={styles.container}>
      <Card style={styles.headerCard}>
        <Card.Content>
          <Title>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</Title>
          <Paragraph>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –≤—Å–µ—Ö UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</Paragraph>
        </Card.Content>
      </Card>

      <View style={styles.section}>
        <Title style={styles.sectionTitle}>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã</Title>
        {testComponents.map((component, index) => (
          <Card key={index} style={styles.componentCard}>
            <Card.Content>
              <Title style={styles.componentTitle}>{component.name}</Title>
              <Paragraph style={styles.componentDescription}>{component.description}</Paragraph>
              <Button
                mode="contained"
                onPress={() => handleTestComponent(component.name)}
                style={styles.testButton}>
                –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            </Card.Content>
          </Card>
        ))}
      </View>

      <View style={styles.section}>
        <Title style={styles.sectionTitle}>–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</Title>

        <AnimatedCard style={styles.demoCard}>
          <Title>–î–µ–º–æ AnimatedCard</Title>
          <Paragraph>–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏</Paragraph>
        </AnimatedCard>

        <GradientCard
          title="–î–µ–º–æ GradientCard"
          subtitle="–ö–∞—Ä—Ç–æ—á–∫–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º"
          icon="‚öΩ"
          gradientColors={['#2196F3', '#21CBF3']}
          onPress={() => Alert.alert('GradientCard', '–ù–∞–∂–∞—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º')}
        />

        <StatCard title="–î–µ–º–æ StatCard" value="42" icon="üèÜ" />

        <View style={styles.buttonDemo}>
          <ArsenalButton
            title="–î–µ–º–æ ArsenalButton"
            onPress={() => Alert.alert('ArsenalButton', '–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ Arsenal')}
          />
        </View>

        <View style={styles.buttonDemo}>
          <AnimatedButton
            title="–î–µ–º–æ AnimatedButton"
            onPress={() => Alert.alert('AnimatedButton', '–ù–∞–∂–∞—Ç–∞ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞')}
          />
        </View>
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: COLORS.background,
  },
  headerCard: {
    margin: 16,
  },
  section: {
    margin: 16,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 16,
    color: COLORS.text,
  },
  componentCard: {
    marginBottom: 12,
  },
  componentTitle: {
    fontSize: 18,
    fontWeight: 'bold',
  },
  componentDescription: {
    color: COLORS.textSecondary,
    marginBottom: 12,
  },
  testButton: {
    marginTop: 8,
  },
  demoCard: {
    marginVertical: 8,
  },
  buttonDemo: {
    marginVertical: 8,
  },
});
