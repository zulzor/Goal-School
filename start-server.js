#!/usr/bin/env node

const { spawn } = require('child_process');
const path = require('path');

console.log('üöÄ –ó–ê–ü–£–°–ö –ï–î–ò–ù–û–ì–û –°–ï–†–í–ï–†–ê –§–£–¢–ë–û–õ–¨–ù–û–ô –®–ö–û–õ–´ "–ê–†–°–ï–ù–ê–õ"');
console.log('='.repeat(60));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–º–∞–Ω–¥—ã
function runCommand(command, args, options = {}) {
  return new Promise((resolve, reject) => {
    console.log(`\nüîß –í—ã–ø–æ–ª–Ω—è–µ–º: ${command} ${args.join(' ')}`);

    const child = spawn(command, args, {
      stdio: 'inherit',
      shell: true,
      ...options,
    });

    child.on('close', code => {
      if (code === 0) {
        resolve();
      } else {
        reject(new Error(`–ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –∫–æ–¥–æ–º ${code}`));
      }
    });

    child.on('error', error => {
      reject(error);
    });
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
async function startServer() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–±—Ä–∞–Ω–Ω–æ–π –≤–µ–±-–≤–µ—Ä—Å–∏–∏...');

    const fs = require('fs');
    const webExportPath = path.join(__dirname, 'web-export');

    if (!fs.existsSync(webExportPath)) {
      console.log('‚ö†Ô∏è  –°–æ–±—Ä–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–±–æ—Ä–∫—É –∫–æ–º–∞–Ω–¥–æ–π:');
      console.log('   npm run build-web');
    } else {
      console.log('‚úÖ –°–æ–±—Ä–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞');
    }

    console.log('\nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –µ–¥–∏–Ω—ã–π —Å–µ—Ä–≤–µ—Ä...');
    console.log(`üåê –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${process.env.PORT || 3003}`);

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    await runCommand('node', ['main-server.js']);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
startServer();